---
import Layout from '../../layouts/Layout.astro';
import { getAllPublishedProjects, getProjectById } from '../../lib/supabase.js';
import Button from '../../components/Button.astro';

export async function getStaticPaths() {
    const projects = await getAllPublishedProjects();

    return projects.map((project: any) => ({
        params: { id: project.id.toString() },
        props: { project },
    }));
}

const { project } = Astro.props;

if (!project) {
    return Astro.redirect('/projetos');
}
---

<Layout title={`${project.title} - Projetos - Thiago Dias`}>
    <!-- Page Header -->
    <section class="pt-32 pb-12 bg-gradient-to-br from-gray-950 via-gray-900 to-gray-950">
        <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="text-center">
                <!-- Category Badge -->
                {project.category && (
                    <span class="inline-block px-4 py-2 bg-gradient-to-r from-primary-500/20 to-accent-orange/20 text-primary-300 text-sm font-medium rounded-full border border-primary-500/30 mb-6">
                        {project.category}
                    </span>
                )}

                <h1 class="text-4xl md:text-5xl font-bold mb-6 bg-gradient-to-r from-primary-400 to-accent-cyan bg-clip-text text-transparent">
                    {project.title}
                </h1>
                
                <p class="text-xl text-gray-400 mb-8 leading-relaxed max-w-3xl mx-auto">
                    {project.description}
                </p>

                <!-- Technologies -->
                {project.technologies && project.technologies.length > 0 && (
                    <div class="flex flex-wrap gap-3 justify-center mb-8">
                        {project.technologies.map((tech: string) => (
                            <span class="px-4 py-2 bg-gradient-to-r from-primary-500/20 to-accent-orange/20 text-primary-300 text-sm font-medium rounded-full border border-primary-500/30">
                                {tech}
                            </span>
                        ))}
                    </div>
                )}

                <!-- Action Buttons -->
                <div class="flex flex-col sm:flex-row gap-4 justify-center">
                    {project.demoLink && (
                        <Button href={project.demoLink} variant="primary" target="_blank">
                            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"></path>
                            </svg>
                            Ver Demonstração
                        </Button>
                    )}

                    {project.githubLink && (
                        <Button href={project.githubLink} variant="secondary" target="_blank">
                            <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 24 24">
                                <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
                            </svg>
                            Ver Código
                        </Button>
                    )}

                    {project.downloadLink && (
                        <Button href={project.downloadLink} variant="outline" target="_blank">
                            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                            </svg>
                            Download
                        </Button>
                    )}
                </div>
            </div>
        </div>
    </section>

    <!-- Project Image -->
    {project.image && (
        <section class="py-12 bg-gray-900">
            <div class="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">
                <div class="relative rounded-2xl overflow-hidden shadow-2xl">
                    <img 
                        src={project.image} 
                        alt={project.title}
                        class="w-full h-96 object-cover"
                    />
                    <div class="absolute inset-0 bg-gradient-to-t from-gray-900/50 to-transparent"></div>
                </div>
            </div>
        </section>
    )}

    <!-- Project Content -->
    <section class="py-20 bg-gray-950">
        <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="prose prose-lg prose-invert max-w-none">
                {project.content ? (
                    <div set:html={project.content}></div>
                ) : (
                    <div class="text-center py-12">
                        <div class="w-16 h-16 bg-gray-800 rounded-full flex items-center justify-center mx-auto mb-4">
                            <svg class="w-8 h-8 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                            </svg>
                        </div>
                        <p class="text-gray-400">Detalhes do projeto em breve.</p>
                    </div>
                )}
            </div>
        </div>
    </section>

    <!-- Back Navigation -->
    <section class="py-12 bg-gray-900 border-t border-gray-700">
        <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
            <Button href="/projetos" variant="secondary">
                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18"></path>
                </svg>
                Voltar aos Projetos
            </Button>
        </div>
    </section>
</Layout>

<style>
    /* Custom prose styles for project content */
    .prose {
        color: #e5e7eb;
    }

    .prose h1,
    .prose h2,
    .prose h3,
    .prose h4 {
        color: white;
    }

    .prose h2 {
        @apply text-2xl font-bold mt-8 mb-4 text-primary-400;
    }

    .prose h3 {
        @apply text-xl font-semibold mt-6 mb-3 text-primary-300;
    }

    .prose p {
        @apply mb-4 leading-relaxed;
    }

    .prose ul,
    .prose ol {
        @apply my-4 pl-6;
    }

    .prose li {
        @apply mb-2;
    }

    .prose code {
        @apply bg-gray-800 px-2 py-1 rounded text-primary-300 font-mono text-sm;
    }

    .prose pre {
        @apply bg-gray-800 p-4 rounded-lg overflow-x-auto border border-gray-700 my-6;
    }

    .prose pre code {
        @apply bg-transparent p-0;
    }

    .prose a {
        @apply text-primary-400 hover:text-primary-300 transition-colors duration-200;
    }

    .prose blockquote {
        @apply border-l-4 border-primary-500 pl-4 italic text-gray-300 my-6;
    }
</style>
