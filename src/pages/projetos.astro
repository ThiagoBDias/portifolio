---
import Layout from '../layouts/Layout.astro';
import { getAllPublishedProjects, getAboutData } from '../lib/supabase.js';
import ProjectCard from '../components/ProjectCard.astro';
import SkillsHighlight from '../components/SkillsHighlight.astro';

// Fetch all published projects (will fallback to mock data if Supabase fails)
const projects = await getAllPublishedProjects();
const aboutData = await getAboutData();

// Dados padrão caso não haja dados no Supabase
const defaultData = {
	socialLinks: {
		email: 'contato@exemplo.com'
	}
};

// Usar dados do Supabase ou dados padrão
const data = aboutData || defaultData;

// Organize projects by category
const categories = ['Todos', 'Full Stack', 'Frontend', 'Backend', 'Mobile'];
const projectsByCategory: Record<string, any[]> = categories.reduce((acc: Record<string, any[]>, category: string) => {
	if (category === 'Todos') {
		acc[category] = projects;
	} else {
		acc[category] = projects.filter((project: any) => project.category === category);
	}
	return acc;
}, {});
---

<Layout title="Projetos - Ítalo Antonio">
	<!-- Page Header -->
	<section class="pt-32 pb-20 bg-gradient-to-br from-gray-950 via-gray-900 to-gray-950">
		<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
			<h1 class="text-4xl md:text-6xl font-bold mb-6 bg-gradient-to-r from-primary-400 to-accent-cyan bg-clip-text text-transparent">
				Meus Projetos
			</h1>
			<p class="text-xl text-gray-400 max-w-3xl mx-auto">
				Uma coleção dos meus trabalhos mais recentes e desafiadores.
				Cada projeto representa uma solução única para problemas reais.
			</p>
		</div>
	</section>
	
	<!-- Skills Highlight Section -->
	<section class="py-16 bg-gray-900">
		<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
			<SkillsHighlight />
		</div>
	</section>

	<!-- Projects Filter Tabs -->
	<section class="py-8 bg-gray-900 border-b border-gray-700">
		<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
			<div class="flex flex-wrap justify-center gap-4">
				{categories.map((category: string) => (
					<button 
						class="filter-tab px-6 py-3 rounded-lg font-medium transition-all duration-200"
						data-category={category}
					>
						{category}
						<span class="ml-2 text-sm opacity-75">
							({projectsByCategory[category]?.length || 0})
						</span>
					</button>
				))}
			</div>
		</div>
	</section>

	<!-- Projects Grid -->
	<section class="py-20 bg-gray-950">
		<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
			{projects && projects.length > 0 ? (
				<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8" id="projects-grid">
					{projects.map((project: any) => (
						<ProjectCard 
							title={project.title}
							description={project.description}
							image={project.image}
							technologies={project.technologies}
							demoLink={project.demoLink}
							githubLink={project.githubLink}
							featured={project.featured}
						/>
					))}
				</div>
			) : (
				<div class="text-center py-20">
					<div class="w-16 h-16 bg-gray-800 rounded-full flex items-center justify-center mx-auto mb-4">
						<svg class="w-8 h-8 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"></path>
						</svg>
					</div>
					<h3 class="text-xl font-semibold text-gray-300 mb-2">Nenhum projeto encontrado</h3>
					<p class="text-gray-400">Volte em breve para ver meus próximos trabalhos!</p>
				</div>
			)}
		</div>
	</section>

	<!-- CTA Section -->
	<section class="py-20 bg-gradient-to-r from-primary-900/20 to-accent-blue/20">
		<div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
			<h2 class="text-3xl md:text-4xl font-bold mb-6 bg-gradient-to-r from-primary-400 to-accent-cyan bg-clip-text text-transparent">
				Interessado em Trabalhar Juntos?
			</h2>
			<p class="text-gray-400 text-lg mb-8 max-w-2xl mx-auto">
				Estou sempre aberto a novos projetos e oportunidades desafiadoras.
				Vamos discutir como posso ajudar a transformar sua ideia em realidade.
			</p>
			<div class="flex flex-col sm:flex-row gap-4 justify-center">
				<a href="/contato" class="bg-gradient-to-r from-primary-600 to-primary-500 hover:from-primary-500 hover:to-primary-400 text-white px-8 py-4 rounded-lg font-semibold transition-all duration-300 transform hover:scale-105 hover:shadow-xl shadow-primary-500/25">
					Entrar em Contato
				</a>
				<a href={`mailto:${data.socialLinks?.email || 'contato@exemplo.com'}`} class="border-2 border-gray-600 hover:border-primary-400 text-gray-300 hover:text-primary-400 px-8 py-4 rounded-lg font-semibold transition-all duration-300">
					Enviar Email
				</a>
			</div>
		</div>
	</section>
</Layout>

<style>
	/* Filter Tabs */
	.filter-tab {
		@apply bg-gray-800 text-gray-400 hover:bg-gray-700 hover:text-gray-200;
	}

	.filter-tab.active {
		@apply bg-gradient-to-r from-primary-600 to-primary-500 text-white;
	}

	/* Project Cards Animation */
	.project-card {
		opacity: 1;
		transform: scale(1);
		transition: opacity 0.3s ease, transform 0.3s ease;
	}

	.project-card.hidden {
		opacity: 0;
		transform: scale(0.8);
		pointer-events: none;
	}

	/* Responsive */
	@media (max-width: 768px) {
		.filter-tab {
			@apply px-4 py-2 text-sm;
		}
	}
</style>

<script>
	// Project filtering functionality
	document.addEventListener('DOMContentLoaded', function() {
		const filterTabs = document.querySelectorAll('.filter-tab');
		const projectsGrid = document.getElementById('projects-grid');
		
		// Set first tab as active by default
		if (filterTabs.length > 0) {
			filterTabs[0].classList.add('active');
		}

		// Get all projects data from the server-rendered content
		const allProjects = Array.from(document.querySelectorAll('[data-category]')).map(card => ({
			element: card,
			category: card.getAttribute('data-category') || '',
		}));

		filterTabs.forEach((tab: Element) => {
			tab.addEventListener('click', function(this: HTMLElement) {
				const selectedCategory = this.getAttribute('data-category');
				
				// Update active tab
				filterTabs.forEach((t: Element) => t.classList.remove('active'));
				this.classList.add('active');
				
				// Filter projects
				if (projectsGrid) {
					const projectCards = projectsGrid.querySelectorAll('article');
					
					projectCards.forEach((card: Element) => {
						const projectCategory = card.getAttribute('data-category') || '';
						
						if (selectedCategory === 'Todos' || projectCategory === selectedCategory) {
							card.classList.remove('hidden');
						} else {
							card.classList.add('hidden');
						}
					});
				}
			});
		});
	});
</script>
</Layout>
