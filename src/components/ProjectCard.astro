---
import Button from './Button.astro';

export interface Props {
  title: string;
  description: string;
  image?: string;
  technologies?: string[];
  demoLink?: string;
  githubLink?: string;
  featured?: boolean;
}

const { 
  title, 
  description, 
  image, 
  technologies = [], 
  demoLink, 
  githubLink,
  featured = false 
} = Astro.props;
---

<article class={`group relative bg-gray-800/50 backdrop-blur-sm rounded-xl overflow-hidden border transition-all duration-300 hover:transform hover:scale-105 ${featured ? 'border-primary-500/50 shadow-lg shadow-primary-500/10' : 'border-gray-700/50 hover:border-primary-500/50'}`}>
  {image && (
    <div class="relative overflow-hidden">
      <img 
        src={image} 
        alt={title} 
        class="w-full h-48 object-cover group-hover:scale-110 transition-transform duration-500" 
        loading="lazy" 
      />
      <div class="absolute inset-0 bg-gradient-to-t from-gray-900/50 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
      {featured && (
        <div class="absolute top-4 right-4 bg-gradient-to-r from-primary-500 to-secondary-500 text-white text-xs px-3 py-1 rounded-full font-medium">
          Destaque
        </div>
      )}
    </div>
  )}
  
  <div class="p-6 space-y-4">
    <h3 class="text-xl font-semibold text-white group-hover:text-primary-400 transition-colors duration-300">
      {title}
    </h3>
    
    <p class="text-gray-400 line-clamp-3 leading-relaxed">
      {description}
    </p>
    
    {technologies.length > 0 && (
      <div class="flex flex-wrap gap-2">
        {technologies.slice(0, 4).map((tech) => (
          <span class="px-3 py-1 bg-gray-700/50 text-gray-300 text-sm rounded-full border border-gray-600/50 hover:border-primary-400/50 hover:text-primary-300 transition-colors duration-200">
            {tech}
          </span>
        ))}
        {technologies.length > 4 && (
          <span class="px-3 py-1 bg-gray-700/50 text-gray-400 text-sm rounded-full border border-gray-600/50">
            +{technologies.length - 4}
          </span>
        )}
      </div>
    )}
    
    <div class="flex gap-3 pt-4 border-t border-gray-700/50">
      {demoLink && (
        <Button variant="primary" size="sm" href={demoLink} target="_blank" class="flex-1 text-center">
          <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"></path>
          </svg>
          Demo
        </Button>
      )}
      {githubLink && (
        <Button variant="outline" size="sm" href={githubLink} target="_blank" class="flex-1 text-center">
          <svg class="w-4 h-4 mr-2" fill="currentColor" viewBox="0 0 24 24">
            <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
          </svg>
          CÃ³digo
        </Button>
      )}
    </div>
  </div>
</article>

<style>
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>